nameOverride: ""    
fullnameOverride: "langflow" 


names:
  container: langflow
  host: langflow
  app: langflow 


image:
  repository: langflowai/langflow
  tag: latest

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false  
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

resources:
  limits:
    memory: 2Gi
    cpu: "1.5"
networkName: awels
service:
  port: 7860
  type: ClusterIP  
  
secrets:
  langflowSecretKey: "your-secret-key"
  openaiApiKey: "your-openai-api-key"
  postgresPassword: "pass"
  superuserPassword: "admin-password"
  langflowdatebaseurl: "postgresql://{{ .Values.postgresql.auth.username }}:$(POSTGRES_PASSWORD)@{{ include \"postgresql.fullname\" . }}:5432/{{ .Values.postgresql.auth.database }}?sslmode=disable"

env:
  - name : LANGFLOW_DATABASE_URL
    valueFrom:
      secretKeyRef:
        key: LANGFLOWDATABASEURL
  - name: LANGFLOW_SUPERUSER_PASSWORD
    valueFrom:
      secretKeyRef:
        key: SUPERUSERPASSWORD

  - name: LANGFLOW_SECRET_KEY
    valueFrom:
      secretKeyRef:
        key: LANGFLOWSECRETKEY

  - name: OPEN_AI_API_KEY
    valueFrom:
      secretKeyRef:
        key: OPENAIAPIKEY
  - name: POSTGRES_PASSWORD
    valueFrom:
      secretKeyRef:
        key: POSTGRESPASSWORD

  - name: LANGFLOW_AUTO_LOGIN
    value: "False"
  - name: LANGFLOW_SUPERUSER
    value: "admin"
  - name: LANGFLOW_NEW_USER_IS_ACTIVE
    value: "False"
  - name: LANGFLOW_SAVE_DB_IN_CONFIG_DIR
    value: "true"
  - name: LANGFLOW_CONFIG_DIR
    value: "/data/config"
  - name: LANGFLOW_PORT
    value: "7860"

healthcheck:
  path: /health
  port: 7860
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 10
  failureThreshold: 5


serviceAccount:
  create: true
  name: ""

ingress:
  enabled: false  
  className: "nginx"  
  annotations: {}

  hosts:
    - host: langflow.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80



podSecurityContext:
  fsGroup: 1000
  runAsNonRoot: true
  fsGroupChangePolicy: "OnRootMismatch"


initContainer:
  postgresHost: my-postgresql
  qdrantHost: my-qdrant
  image: "busybox"
  tag: "latest"
  storageImage: "alpine"
  storageTag: "latest"
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true
    allowPrivilegeEscalation: false
  resources:
    requests:
      cpu: "100m"
      memory: "64Mi"
    limits:
      cpu: "200m"
      memory: "128Mi"


persistence:
  enabled: true
  accessMode: ReadWriteOnce
  size: 10Gi
  uid: 1000
  gid: 1000
  annotations:
    pv.beta.kubernetes.io/gid: "1000"
